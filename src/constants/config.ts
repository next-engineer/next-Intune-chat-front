// ========================================
// ÌôòÍ≤Ω Î≥ÄÏàò ÏÑ§Ï†ï Í¥ÄÎ¶¨ ÌååÏùº
// ========================================

// ÌôòÍ≤Ω Î≥ÄÏàò ÌÉÄÏûÖ Ï†ïÏùò
interface Config {
  // API ÏÑ§Ï†ï
  API_URL: string;
  API_TIMEOUT: number;
  
  // WebSocket ÏÑ§Ï†ï
  WEBSOCKET_URL: string;
  WEBSOCKET_PING_INTERVAL: number;
  WEBSOCKET_PONG_TIMEOUT: number;
  
  // Notion API ÏÑ§Ï†ï
  NOTION_API_KEY: string;
  NOTION_DATABASE_ID: string;
  
  // Í∞úÎ∞ú ÌôòÍ≤Ω ÏÑ§Ï†ï
  DEV_MODE: boolean;
  DEBUG_MODE: boolean;
  
  // Í∏∞Îä• ÌîåÎûòÍ∑∏
  ENABLE_CHAT: boolean;
  ENABLE_NOTION: boolean;
  ENABLE_PINGPONG: boolean;
  
  // ÎπåÎìú ÏÑ§Ï†ï
  APP_NAME: string;
  APP_VERSION: string;
  
  // AWS ÏÑ§Ï†ï
  AWS_REGION: string;
  AWS_COGNITO_USER_POOL_ID: string;
  AWS_COGNITO_CLIENT_ID: string;
  AWS_S3_BUCKET_NAME: string;
  AWS_CLOUDFRONT_DISTRIBUTION_ID: string;
}

// ÌôòÍ≤Ω Î≥ÄÏàòÏóêÏÑú Í∞íÏùÑ Í∞ÄÏ†∏Ïò§Îäî Ìï®Ïàò
const getEnvVar = (key: string, defaultValue?: any) => {
  const value = (import.meta as any).env?.[key];
  return value !== undefined ? value : defaultValue;
};

// ÌôòÍ≤Ω Î≥ÄÏàòÏóêÏÑú Ïà´ÏûêÎ•º Í∞ÄÏ†∏Ïò§Îäî Ìï®Ïàò
const getEnvNumber = (key: string, defaultValue: number) => {
  const value = getEnvVar(key);
  return value ? parseInt(value, 10) : defaultValue;
};

// ÌôòÍ≤Ω Î≥ÄÏàòÏóêÏÑú Î∂àÎ¶∞ÏùÑ Í∞ÄÏ†∏Ïò§Îäî Ìï®Ïàò
const getEnvBoolean = (key: string, defaultValue: boolean) => {
  const value = getEnvVar(key);
  return value ? value === 'true' : defaultValue;
};

// ÏÑ§Ï†ï Í∞ùÏ≤¥ ÏÉùÏÑ±
export const config: Config = {
  // API ÏÑ§Ï†ï
  API_URL: getEnvVar('VITE_API_URL', 'http://localhost:8080'),
  API_TIMEOUT: getEnvNumber('VITE_API_TIMEOUT', 10000),
  
  // WebSocket ÏÑ§Ï†ï
  WEBSOCKET_URL: getEnvVar('VITE_WEBSOCKET_URL', 'wss://localhost:8080/ws'),
  WEBSOCKET_PING_INTERVAL: getEnvNumber('VITE_WEBSOCKET_PING_INTERVAL', 30000),
  WEBSOCKET_PONG_TIMEOUT: getEnvNumber('VITE_WEBSOCKET_PONG_TIMEOUT', 10000),
  
  // Notion API ÏÑ§Ï†ï
  NOTION_API_KEY: getEnvVar('VITE_NOTION_API_KEY', ''),
  NOTION_DATABASE_ID: getEnvVar('VITE_NOTION_DATABASE_ID', ''),
  
  // Í∞úÎ∞ú ÌôòÍ≤Ω ÏÑ§Ï†ï
  DEV_MODE: getEnvBoolean('VITE_DEV_MODE', true),
  DEBUG_MODE: getEnvBoolean('VITE_DEBUG_MODE', false),
  
  // Í∏∞Îä• ÌîåÎûòÍ∑∏
  ENABLE_CHAT: getEnvBoolean('VITE_ENABLE_CHAT', true),
  ENABLE_NOTION: getEnvBoolean('VITE_ENABLE_NOTION', true),
  ENABLE_PINGPONG: getEnvBoolean('VITE_ENABLE_PINGPONG', true),
  
  // ÎπåÎìú ÏÑ§Ï†ï
  APP_NAME: getEnvVar('VITE_APP_NAME', 'Intune Front'),
  APP_VERSION: getEnvVar('VITE_APP_VERSION', '0.1.0'),
  
  // AWS ÏÑ§Ï†ï
  AWS_REGION: getEnvVar('VITE_AWS_REGION', 'ap-northeast-2'),
  AWS_COGNITO_USER_POOL_ID: getEnvVar('VITE_AWS_COGNITO_USER_POOL_ID', ''),
  AWS_COGNITO_CLIENT_ID: getEnvVar('VITE_AWS_COGNITO_CLIENT_ID', ''),
  AWS_S3_BUCKET_NAME: getEnvVar('VITE_AWS_S3_BUCKET_NAME', ''),
  AWS_CLOUDFRONT_DISTRIBUTION_ID: getEnvVar('VITE_AWS_CLOUDFRONT_DISTRIBUTION_ID', ''),
};

// ÌôòÍ≤Ω Ï†ïÎ≥¥ Ï∂úÎ†• (Í∞úÎ∞ú Î™®ÎìúÏóêÏÑúÎßå)
if (config.DEV_MODE && config.DEBUG_MODE) {
  console.log('üåç ÌôòÍ≤Ω ÏÑ§Ï†ï Ï†ïÎ≥¥:', {
    API_URL: config.API_URL,
    WEBSOCKET_URL: config.WEBSOCKET_URL,
    DEV_MODE: config.DEV_MODE,
    DEBUG_MODE: config.DEBUG_MODE,
    APP_NAME: config.APP_NAME,
    APP_VERSION: config.APP_VERSION,
  });
}

export default config;
